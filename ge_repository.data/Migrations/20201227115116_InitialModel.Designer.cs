// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ge_repository.data;

namespace ge_repository.data.Migrations
{
    [DbContext(typeof(ge_DbContext))]
    [Migration("20201227115116_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ge_repository.core.models.ge_data", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("cstatus")
                        .HasColumnType("int");

                    b.Property<int>("datumProjection")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("editedDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("encoding")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<DateTime>("filedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("fileext")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("filename")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<long>("filesize")
                        .HasColumnType("bigint");

                    b.Property<string>("filetype")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("folder")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("locAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locEast")
                        .HasColumnType("float");

                    b.Property<double?>("locHeight")
                        .HasColumnType("float");

                    b.Property<double?>("locLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("locLevel")
                        .HasColumnType("float");

                    b.Property<double?>("locLongitude")
                        .HasColumnType("float");

                    b.Property<string>("locMapReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("locName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locNorth")
                        .HasColumnType("float");

                    b.Property<string>("locOtherDb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("locPostcode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locX")
                        .HasColumnType("float");

                    b.Property<double?>("locY")
                        .HasColumnType("float");

                    b.Property<double?>("locZ")
                        .HasColumnType("float");

                    b.Property<string>("operations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("pflag")
                        .HasColumnType("int");

                    b.Property<Guid>("projectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("pstatus")
                        .HasColumnType("int");

                    b.Property<int>("qstatus")
                        .HasColumnType("int");

                    b.Property<string>("version")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("vstatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("projectId");

                    b.ToTable("ge_data");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_data_big", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("data_binary")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("data_string")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("data_xml")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ge_data");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("context")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("level")
                        .HasColumnType("int");

                    b.Property<string>("message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("returnUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("createdId");

                    b.ToTable("ge_event");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("datumProjection")
                        .HasColumnType("int");

                    b.Property<DateTime?>("editedDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("folder")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("homepageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("locAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locEast")
                        .HasColumnType("float");

                    b.Property<double?>("locHeight")
                        .HasColumnType("float");

                    b.Property<double?>("locLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("locLevel")
                        .HasColumnType("float");

                    b.Property<double?>("locLongitude")
                        .HasColumnType("float");

                    b.Property<string>("locMapReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("locName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locNorth")
                        .HasColumnType("float");

                    b.Property<string>("locOtherDb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("locPostcode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locX")
                        .HasColumnType("float");

                    b.Property<double?>("locY")
                        .HasColumnType("float");

                    b.Property<double?>("locZ")
                        .HasColumnType("float");

                    b.Property<string>("managerId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("operations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("pflag")
                        .HasColumnType("int");

                    b.Property<string>("project_operations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ge_group");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("cstatus")
                        .HasColumnType("int");

                    b.Property<string>("data_operations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("datumProjection")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("editedDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("end_date")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("esriConnectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("folder")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("groupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("homepageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("keywords")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("locAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locEast")
                        .HasColumnType("float");

                    b.Property<double?>("locHeight")
                        .HasColumnType("float");

                    b.Property<double?>("locLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("locLevel")
                        .HasColumnType("float");

                    b.Property<double?>("locLongitude")
                        .HasColumnType("float");

                    b.Property<string>("locMapReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("locName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locNorth")
                        .HasColumnType("float");

                    b.Property<string>("locOtherDb")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("locPostcode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("locX")
                        .HasColumnType("float");

                    b.Property<double?>("locY")
                        .HasColumnType("float");

                    b.Property<double?>("locZ")
                        .HasColumnType("float");

                    b.Property<string>("managerId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("operations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("otherDbConnectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("pflag")
                        .HasColumnType("int");

                    b.Property<int>("pstatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("start_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("verex")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("groupId");

                    b.ToTable("ge_project");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_transform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("add_data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("createdDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("cstatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("dataId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("editedDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("operations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("parameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("pflag")
                        .HasColumnType("int");

                    b.Property<Guid?>("projectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("pstatus")
                        .HasColumnType("int");

                    b.Property<int>("qstatus")
                        .HasColumnType("int");

                    b.Property<Guid?>("queryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("service_endpoint")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("storedprocedure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("styleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("version")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("vstatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("dataId");

                    b.HasIndex("projectId");

                    b.HasIndex("queryId");

                    b.HasIndex("styleId");

                    b.ToTable("ge_transform");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_user", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("LastLoggedIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ge_user");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_user_ops", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("createdDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("createdId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("editedDT")
                        .HasColumnType("datetime2");

                    b.Property<string>("editedId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("groupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("operations")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("pflag")
                        .HasColumnType("int");

                    b.Property<Guid?>("projectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("userId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("user_operations")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("groupId");

                    b.HasIndex("projectId");

                    b.HasIndex("userId");

                    b.ToTable("ge_user_ops");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_data", b =>
                {
                    b.HasOne("ge_repository.core.models.ge_data_big", "data")
                        .WithOne("data")
                        .HasForeignKey("ge_repository.core.models.ge_data", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ge_repository.core.models.ge_project", "project")
                        .WithMany("data")
                        .HasForeignKey("projectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("data");

                    b.Navigation("project");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_event", b =>
                {
                    b.HasOne("ge_repository.core.models.ge_user", "created")
                        .WithMany()
                        .HasForeignKey("createdId");

                    b.Navigation("created");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_project", b =>
                {
                    b.HasOne("ge_repository.core.models.ge_group", "group")
                        .WithMany("projects")
                        .HasForeignKey("groupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("group");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_transform", b =>
                {
                    b.HasOne("ge_repository.core.models.ge_data", "data")
                        .WithMany()
                        .HasForeignKey("dataId");

                    b.HasOne("ge_repository.core.models.ge_project", "project")
                        .WithMany("transform")
                        .HasForeignKey("projectId");

                    b.HasOne("ge_repository.core.models.ge_data", "query")
                        .WithMany()
                        .HasForeignKey("queryId");

                    b.HasOne("ge_repository.core.models.ge_data", "style")
                        .WithMany()
                        .HasForeignKey("styleId");

                    b.Navigation("data");

                    b.Navigation("project");

                    b.Navigation("query");

                    b.Navigation("style");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_user_ops", b =>
                {
                    b.HasOne("ge_repository.core.models.ge_group", "group")
                        .WithMany("users")
                        .HasForeignKey("groupId");

                    b.HasOne("ge_repository.core.models.ge_project", "project")
                        .WithMany("users")
                        .HasForeignKey("projectId");

                    b.HasOne("ge_repository.core.models.ge_user", "user")
                        .WithMany("user_ops")
                        .HasForeignKey("userId");

                    b.Navigation("group");

                    b.Navigation("project");

                    b.Navigation("user");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_data_big", b =>
                {
                    b.Navigation("data");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_group", b =>
                {
                    b.Navigation("projects");

                    b.Navigation("users");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_project", b =>
                {
                    b.Navigation("data");

                    b.Navigation("transform");

                    b.Navigation("users");
                });

            modelBuilder.Entity("ge_repository.core.models.ge_user", b =>
                {
                    b.Navigation("user_ops");
                });
#pragma warning restore 612, 618
        }
    }
}
